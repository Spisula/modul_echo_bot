from aiogram import Router, F
from aiogram.types import (KeyboardButton, Message, ReplyKeyboardMarkup,
                           ReplyKeyboardRemove)
from lexicon.lexicon import LEXICON_RU
from aiogram.filters import Text


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä —É—Ä–æ–≤–Ω—è –º–æ–¥—É–ª—è
router: Router = Router()
# —Å–æ–∑–¥–∞–µ–º —Ñ–∏–ª—å—Ç—Ä –Ω–∞ —Å–∞–º–æ–º —Ä–æ—É—Ç–µ—Ä–µ, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø–∏—Å—ã–≤–∞—Ç—å –≤ –∫–∞–∂–¥–æ–º —Ö—ç–Ω–¥–ª–µ—Ä–µ.
# –≠—Ç–æ—Ç —Ñ–∏–ª—å—Ç—Ä–∞ –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å—Ç–∏–∫–µ—Ä—ã
#router.message.filter(F.sticker)

button_1: KeyboardButton = KeyboardButton(text='–°–æ–±–∞–∫ ü¶Æ')
button_2: KeyboardButton = KeyboardButton(text='–æ–≥—É—Ä—Ü–æ–≤ ü•í')

keyboard: ReplyKeyboardMarkup = ReplyKeyboardMarkup(
                                    keyboard=[[button_1, button_2]])

@router.message(F.text == '–∑–∞–¥–∞–π –≤–æ–ø—Ä–æ—Å')
async def question_button(msg: Message):
    await msg.answer(text='—á–µ–≥–æ –∫–æ—à–∫–∏ –±–æ—è—Ç—Å—è –±–æ–ª—å—à–µ –≤—Å–µ–≥–æ', reply_markup=keyboard)

@router.message(F.text == '–°–æ–±–∞–∫ ü¶Æ')
async def answer_dogs(msg: Message):
    await msg.answer(text='–î–∞, –∫–æ—à–∫–∏ –±–æ—è—Ç—Å—è —Å–æ–±–∞–∫',
                     reply_markup=ReplyKeyboardRemove)

@router.message(F.text == '–æ–≥—É—Ä—Ü–æ–≤ ü•í')
async def answer_cuc(msg: Message):
    await msg.answer(text='–ù–æ –æ–≥—É—Ä—Ü–æ–≤ –∫–æ—à–∫–∏ –±–æ—è—Ç—Å—è –µ—â–µ –±–æ–ª—å—à–µ',
                     reply_markup = ReplyKeyboardRemove)

@router.message(F.text)
async def echo(msg: Message):
    try:
        await msg.send_copy(chat_id=msg.chat.id)
    except TypeError:
        await msg.reply(text=LEXICON_RU['no_echo'])


@router.message(F.sticker)
async def echo_sticker(msg: Message):
    try:
        await msg.answer_sticker(msg.sticker.file_id)
    except:
        await msg.reply(text=LEXICON_RU['no_echo'])